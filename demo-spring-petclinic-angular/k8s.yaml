apiVersion: v1
kind: Namespace
metadata:
  name: petclinic
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-frontend
  namespace: petclinic
  labels:
    app: petclinic-frontend
    run: petclinic-frontend
spec:
  selector:
    matchLabels:
      run: petclinic-frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: petclinic-frontend
        run: petclinic-frontend
    spec:
      containers:
        - image: 061039780337.dkr.ecr.eu-west-1.amazonaws.com/petclinic/frontend:1.0.0-SNAPSHOT
          imagePullPolicy: Always
          name: petclinic-frontend
          resources:
            limits:
              cpu: "1"
              memory: 700Mi
            requests:
              cpu: 800m
              memory: 400Mi
          ports:
            - containerPort: 8080
              protocol: TCP
---
kind: Service
apiVersion: v1
metadata:
  name: petclinic-frontend
  namespace: petclinic
spec:
  type: NodePort
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8080
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: petclinic-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-petclinic-frontend
  namespace: petclinic
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "off"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-headers: authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT,GET,POST,HEAD,PATCH,DELETE
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: petclinic-frontend
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-petclinic-frontend
  namespace: petclinic
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "off"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    nginx.ingress.kubernetes.io/cors-allow-headers: authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: PUT,GET,POST,HEAD,PATCH,DELETE
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: petclinic-frontend
                port:
                  number: 80
            path: /petclinic
            pathType: Prefix